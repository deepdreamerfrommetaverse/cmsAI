from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.interval import IntervalTrigger
import asyncio, logging

from app.core.ai_client import generate_article
from app.services.articles import create_article
from app.db.session import get_session
from app.schemas.article import ArticleCreate

log = logging.getLogger(__name__)

def start_scheduler():
    scheduler = AsyncIOScheduler()
    scheduler.add_job(publish_fresh_article, IntervalTrigger(hours=6))
    scheduler.start()
    log.info("Scheduler started.")

async def publish_fresh_article():
    prompt = "Napisz świeży artykuł finansowy (500 słów, wypunktowania, wnioski)."
    article_body = await generate_article(prompt)
    new_article = ArticleCreate(
        title="Autogenerated finance article",
        slug="auto-finance-" + str(hash(article_body) % 10000),
        body=article_body
    )
    # Use independent session
    async for db in get_session():
        await create_article(db, new_article, author_id=1)
    log.info("Auto‑article published.")
